openapi: "3.0.2"
info:
  title: MusicPro
  version: "1.0"
servers:
  - url: http://localhost:3000/api
    description: Local host on port 3000
paths:
  /api/producto:
    get:
      summary: Lista todos los productos o uno en particular. También incluye paginación.
      parameters:
        - in: query
          name: id
          schema:
            type: string
          description: ID del producto
          example: ?id=79tz20fzo8llfp61rxrq
        - in: query
          name: atributo
          schema:
            type: string
          description: Filtrar por cualquier atributo del Producto. Mira los ejemplos para ver como utilizarlo.
          examples:
            nombre:
              value: ?nombre=Guitarra
            descripcion:
              value: ?descripcion=Guitarra
            categoria:
              value: ?categoria=Guitarras
            precio:
              value: ?precio=10000
            stock:
              value: ?stock=10
            mayor:
              value: ?stock=>10
            menor:
              value: ?stock=<10
        - in: query
          name: page
          schema:
            type: integer
          description: Número de página.
          example: ?page=1
        - in: query
          name: producto por pagina
          schema:
            type: integer
          description: Cantidad de productos por página. Por defecto es 10. Sólo funciona si se utiliza paginación.
          example: ?paginated-by=10
      tags:
        - Producto
      responses:
        200:
          description: Lista de productos o producto en particular.
          content:
            application/json:
              schema:
                type: array
                example: {"categoria":"Guitarras","descripcion":"Guitarra Acústica, nueva y ya afinada por expertos en nuestra empresa.","id":"producto:79tz20fzo8llfp61rxrq","nombre":"Guitarra Acústica","precio":49990,"stock":5}
    post:
      tags:
        - Producto
      description: Crea un nuevo producto en la base de datos.
      requestBody:
        content:
          application/json:
            schema:
              type: Producto
              $ref: "#/components/schemas/Producto"
      responses:
        200:
          description: Nuevo producto creado
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Producto"
                properties:
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: object
    put:
      tags:
        - Producto
      summary: Modifica productos
      requestBody:
        content:
          application/json:
            schema:
              type: Producto
              $ref: "#/components/schemas/Producto"
      responses:
        200:
          description: Producto modificado
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Producto"
                properties:
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: object
  /api/pedido:
    post:
      tags:
        - Pedido
      requestBody:
        content:
          application/json:
            schema:
              type: Pedido
              $ref: '#/components/schemas/Pedido'
      responses:
        200:
          description: Nuevo pedido creado
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Pedido'
                properties:
                  status:
                    type: string
                    example: OK
                  data:
                    type: array 
                    items: 
                      type: object
  /api/transaccion:
    get:
      summary: 'Página para pagar un pedido.'
      tags:
        - Transaccion
      responses:
        200:
          description: 'Redirecciona a la página de pago.'
  /transaccion/committed:
    get:
      summary: 'Página de confirmación de pago.'
      tags:
        - Transaccion
      responses:
        200:
          description: 'Redirecciona a la página de confirmación de pago.'
components:
  schemas:
    Producto:
      type: object
      properties:
        categoria:
          type: string
          description: Categoria del producto
        descripcion:
          type: string
          description: Descripcion del producto
        nombre:
          type: string
          description: Nombre del producto
        precio:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad disponible del producto
      required:
        - nombre
        - precio
        - stock
        - categoria
    Pedido:
      type: object
      properties:
        cliente:
          type: number
          description: RUT del cliente 
        productos:
          type: array
          description: Productos del cliente
      required:
       - cliente
       - productos